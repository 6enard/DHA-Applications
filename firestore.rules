rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admin/hr to read all user profiles
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'hr'];
    }
    
    // Jobs are readable by all, writable by admin/hr
    match /jobs/{jobId} {
      allow read: if true;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'hr'];
    }
    
    // Applications - Allow public creation, but restrict read/update access
    match /applications/{applicationId} {
      // Allow anyone to create applications (for public job applications)
      allow create: if true;
      
      // Allow applicants to read their own applications (by email match)
      // Allow admin/hr to read all applications
      allow read: if request.auth != null && 
        (request.auth.email == resource.data.applicantEmail || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'hr']));
      
      // Only admin/hr can update applications
      allow update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'hr'];
    }
    
    // Email notifications - Allow anyone to create (for application confirmations)
    // Allow admin/hr to read and update
    match /email_notifications/{notificationId} {
      allow create: if true;
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'hr'];
    }
  }
}